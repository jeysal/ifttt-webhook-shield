// flow-typed signature: e422710aecde82a8188c8177fe76bffb
// flow-typed version: <<STUB>>/route-parser_v^0.0.5/flow_v0.62.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'route-parser'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

declare module 'route-parser' {
  declare module.exports: any;
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */
declare module 'route-parser/gulpfile' {
  declare module.exports: any;
}

declare module 'route-parser/karma.conf' {
  declare module.exports: any;
}

declare module 'route-parser/lib/route' {
  declare module.exports: any;
}

declare module 'route-parser/lib/route/compiled-grammar' {
  declare module.exports: any;
}

declare module 'route-parser/lib/route/grammar' {
  declare module.exports: any;
}

declare module 'route-parser/lib/route/nodes' {
  declare module.exports: any;
}

declare module 'route-parser/lib/route/parser' {
  declare module.exports: any;
}

declare module 'route-parser/lib/route/visitors/create_visitor' {
  declare module.exports: any;
}

declare module 'route-parser/lib/route/visitors/reconstruct' {
  declare module.exports: any;
}

declare module 'route-parser/lib/route/visitors/regexp' {
  declare module.exports: any;
}

declare module 'route-parser/lib/route/visitors/reverse' {
  declare module.exports: any;
}

declare module 'route-parser/scripts/compile_parser' {
  declare module.exports: any;
}

declare module 'route-parser/test/backbone-compatibility' {
  declare module.exports: any;
}

declare module 'route-parser/test/test' {
  declare module.exports: any;
}

declare module 'route-parser/test/visitor' {
  declare module.exports: any;
}

// Filename aliases
declare module 'route-parser/gulpfile.js' {
  declare module.exports: $Exports<'route-parser/gulpfile'>;
}
declare module 'route-parser/index' {
  declare module.exports: $Exports<'route-parser'>;
}
declare module 'route-parser/index.js' {
  declare module.exports: $Exports<'route-parser'>;
}
declare module 'route-parser/karma.conf.js' {
  declare module.exports: $Exports<'route-parser/karma.conf'>;
}
declare module 'route-parser/lib/route.js' {
  declare module.exports: $Exports<'route-parser/lib/route'>;
}
declare module 'route-parser/lib/route/compiled-grammar.js' {
  declare module.exports: $Exports<'route-parser/lib/route/compiled-grammar'>;
}
declare module 'route-parser/lib/route/grammar.js' {
  declare module.exports: $Exports<'route-parser/lib/route/grammar'>;
}
declare module 'route-parser/lib/route/nodes.js' {
  declare module.exports: $Exports<'route-parser/lib/route/nodes'>;
}
declare module 'route-parser/lib/route/parser.js' {
  declare module.exports: $Exports<'route-parser/lib/route/parser'>;
}
declare module 'route-parser/lib/route/visitors/create_visitor.js' {
  declare module.exports: $Exports<'route-parser/lib/route/visitors/create_visitor'>;
}
declare module 'route-parser/lib/route/visitors/reconstruct.js' {
  declare module.exports: $Exports<'route-parser/lib/route/visitors/reconstruct'>;
}
declare module 'route-parser/lib/route/visitors/regexp.js' {
  declare module.exports: $Exports<'route-parser/lib/route/visitors/regexp'>;
}
declare module 'route-parser/lib/route/visitors/reverse.js' {
  declare module.exports: $Exports<'route-parser/lib/route/visitors/reverse'>;
}
declare module 'route-parser/scripts/compile_parser.js' {
  declare module.exports: $Exports<'route-parser/scripts/compile_parser'>;
}
declare module 'route-parser/test/backbone-compatibility.js' {
  declare module.exports: $Exports<'route-parser/test/backbone-compatibility'>;
}
declare module 'route-parser/test/test.js' {
  declare module.exports: $Exports<'route-parser/test/test'>;
}
declare module 'route-parser/test/visitor.js' {
  declare module.exports: $Exports<'route-parser/test/visitor'>;
}
